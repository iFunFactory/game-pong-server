// Generated by the iFun Engine.
// DO NOT EDIT.

#include "pong_loggers.h"

#include <boost/assign.hpp>
#include <boost/lexical_cast.hpp>
#include <funapi/system/logging.h>
#include <funapi/types.h>


namespace logger {

using fun::LogActivity;
using fun::LoggerColumnNames;
using fun::LoggerColumnQuotes;
using fun::LoggerColumnValues;
using fun::LoggerRegistryHelper;
using fun::shared_ptr;
using fun::string;

void SessionOpened(const string & arg_session_id, const WallClock::Value & arg_when) {
  using boost::assign::list_of;
  static const LoggerColumnNames columns = list_of("session_id")("when");
  static const LoggerColumnCppTypes types = list_of(fun::LCT_STRING)(fun::LCT_WALLCLOCK_VALUE);
  static const LoggerColumnQuotes quotes = list_of(true)(true);
  static const string schema = "{\"session_id\": \"string\", \"when\": \"datetime2\"}";
  static const LoggerRegistryHelper helper("SessionOpened", schema, columns, types, quotes);

  LoggerColumnValues values;
  values.push_back(arg_session_id);
  values.push_back(boost::posix_time::to_iso_string(arg_when));
  fun::LogActivity("SessionOpened", values);
}


void SessionClosed(const string & arg_session_id, const WallClock::Value & arg_when) {
  using boost::assign::list_of;
  static const LoggerColumnNames columns = list_of("session_id")("when");
  static const LoggerColumnCppTypes types = list_of(fun::LCT_STRING)(fun::LCT_WALLCLOCK_VALUE);
  static const LoggerColumnQuotes quotes = list_of(true)(true);
  static const string schema = "{\"session_id\": \"string\", \"when\": \"datetime2\"}";
  static const LoggerRegistryHelper helper("SessionClosed", schema, columns, types, quotes);

  LoggerColumnValues values;
  values.push_back(arg_session_id);
  values.push_back(boost::posix_time::to_iso_string(arg_when));
  fun::LogActivity("SessionClosed", values);
}


void PlayerLoggedIn(const string & arg_session_id, const string & arg_account_id, const WallClock::Value & arg_when) {
  using boost::assign::list_of;
  static const LoggerColumnNames columns = list_of("session_id")("account_id")("when");
  static const LoggerColumnCppTypes types = list_of(fun::LCT_STRING)(fun::LCT_STRING)(fun::LCT_WALLCLOCK_VALUE);
  static const LoggerColumnQuotes quotes = list_of(true)(true)(true);
  static const string schema = "{\"session_id\": \"string\", \"account_id\": \"string\", \"when\": \"datetime2\"}";
  static const LoggerRegistryHelper helper("PlayerLoggedIn", schema, columns, types, quotes);

  LoggerColumnValues values;
  values.push_back(arg_session_id);
  values.push_back(arg_account_id);
  values.push_back(boost::posix_time::to_iso_string(arg_when));
  fun::LogActivity("PlayerLoggedIn", values);
}


}  // namespace logger
